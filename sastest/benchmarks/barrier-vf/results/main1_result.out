CBMC version 5.8 64-bit x86_64 linux
Parsing benchmarks/barrier-vf/main1.c
Converting
Type-checking main1
Generating GOTO Program
Adding CPROVER library (x86_64)
Removal of function pointers and virtual functions
file <builtin-library-pthread_create> line 46 function pthread_create: replacing function pointer by 3 possible targets
Partial Inlining
Generic Property Instrumentation
Starting Bounded Model Checking
Adding SC constraints
Shared __CPROVER_threads_exited: 3R/4W
Shared __CPROVER_next_thread_id: 2R/4W
Shared sas0: 12R/13W
Shared rf_check: 5R/3W
Shared rf_read: 6R/3W
Shared rf_write0: 6R/3W
Shared rf_write1: 1R/3W
Shared rf_write2: 1R/3W
Shared rf_write3: 1R/3W
Shared rf_write4: 1R/3W
Shared rf_write5: 1R/3W
Shared cond2_bool: 1R/2W
Shared cond1_bool: 1R/2W
Shared mutex1: 1R/2W
Shared cond0_bool: 1R/2W
Shared count_SHARED: 6R/7W
size of program expression: 3187 steps
no slicing due to threads
Generated 7 VCC(s), 7 remaining after simplification
Passing problem to propositional reduction
converting SSA
Running propositional reduction
Post-processing
Solving with MiniSAT 2.2.1 with simplifier
66871 variables, 283297 clauses
SAT checker: instance is SATISFIABLE
Solving with MiniSAT 2.2.1 with simplifier
66871 variables, 151673 clauses
SAT checker: instance is UNSATISFIABLE
Runtime decision procedure: 105.596s

** Results:
[] must hold lock upon unlock: SUCCESS
[main.assertion.1] assertion !rf_check: FAILURE
[pthread_mutex_unlock.assertion.1] must hold lock upon unlock: SUCCESS
[pthread_mutex_unlock.assertion.2] must hold lock upon unlock: SUCCESS
[pthread_mutex_unlock.assertion.3] must hold lock upon unlock: SUCCESS
[pthread_mutex_unlock.assertion.4] must hold lock upon unlock: SUCCESS
[pthread_mutex_unlock.assertion.5] must hold lock upon unlock: SUCCESS
[pthread_mutex_unlock.assertion.6] must hold lock upon unlock: SUCCESS

** 1 of 8 failed (2 iterations)
VERIFICATION FAILED
