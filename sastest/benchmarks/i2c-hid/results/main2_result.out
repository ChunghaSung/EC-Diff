CBMC version 5.8 64-bit x86_64 linux
Parsing benchmarks/i2c-hid/main2.c
Converting
Type-checking main2
Generating GOTO Program
Adding CPROVER library (x86_64)
Removal of function pointers and virtual functions
file <builtin-library-pthread_create> line 46 function pthread_create: replacing function pointer by 2 possible targets
Partial Inlining
Generic Property Instrumentation
Starting Bounded Model Checking
Unwinding loop thread_open.0 iteration 1 (2 max) file benchmarks/i2c-hid/main2.c line 25 function thread_open thread 1
Not unwinding loop thread_open.0 iteration 2 (2 max) file benchmarks/i2c-hid/main2.c line 25 function thread_open thread 1
Unwinding loop thread_close.0 iteration 1 (2 max) file benchmarks/i2c-hid/main2.c line 58 function thread_close thread 2
Not unwinding loop thread_close.0 iteration 2 (2 max) file benchmarks/i2c-hid/main2.c line 58 function thread_close thread 2
Adding SC constraints
Shared __CPROVER_next_thread_id: 1R/3W
Shared sas0: 12R/15W
Shared rf_check: 4R/4W
Shared rf_read: 4R/4W
Shared rf_write0: 4R/4W
Shared rf_write1: 2R/4W
Shared rf_write2: 2R/2W
Shared open_SHARED: 10R/6W
Shared power_on_SHARED: 4R/6W
Shared a: 8R/9W
size of program expression: 4060 steps
no slicing due to threads
Generated 12 VCC(s), 12 remaining after simplification
Passing problem to propositional reduction
converting SSA
Running propositional reduction
Post-processing
Solving with MiniSAT 2.2.1 with simplifier
78640 variables, 344246 clauses
SAT checker: instance is UNSATISFIABLE
Runtime decision procedure: 13.769s

** Results:
[] must hold lock upon unlock: SUCCESS
[pthread_mutex_unlock.assertion.1] must hold lock upon unlock: SUCCESS
[main.assertion.1] assertion !rf_check: SUCCESS
[pthread_mutex_unlock.assertion.2] must hold lock upon unlock: SUCCESS
[pthread_mutex_unlock.assertion.3] must hold lock upon unlock: SUCCESS
[pthread_mutex_unlock.assertion.4] must hold lock upon unlock: SUCCESS
[pthread_mutex_unlock.assertion.5] must hold lock upon unlock: SUCCESS
[pthread_mutex_unlock.assertion.6] must hold lock upon unlock: SUCCESS

** 0 of 8 failed (1 iteration)
VERIFICATION SUCCESSFUL
