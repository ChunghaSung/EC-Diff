CBMC version 5.8 64-bit x86_64 linux
Parsing benchmarks/jetty-1187/main1.c
Converting
Type-checking main1
Generating GOTO Program
Adding CPROVER library (x86_64)
Removal of function pointers and virtual functions
file <builtin-library-pthread_create> line 46 function pthread_create: replacing function pointer by 2 possible targets
Partial Inlining
Generic Property Instrumentation
Starting Bounded Model Checking
Adding SC constraints
Shared __CPROVER_threads_exited: 4R/3W
Shared __CPROVER_next_thread_id: 7R/3W
Shared sas0: 6R/9W
Shared sas1: 6R/9W
Shared rf_read1: 2R/3W
Shared rf_read2: 2R/3W
Shared rf_check1: 3R/3W
Shared rf_check2: 3R/3W
Shared rf_write01: 3R/3W
Shared rf_write02: 3R/3W
Shared rf_write11: 1R/3W
Shared rf_write12: 2R/3W
Shared rf_write21: 1R/3W
Shared mutex0: 4R/5W
Shared _set_SHARED: 2R/4W
Shared m: 2R/3W
Shared main::1::t1!0@1: 1R/2W
Shared main::1::t2!0@1: 1R/2W
size of program expression: 2150 steps
no slicing due to threads
Generated 12 VCC(s), 12 remaining after simplification
Passing problem to propositional reduction
converting SSA
Running propositional reduction
Post-processing
Solving with MiniSAT 2.2.1 with simplifier
47792 variables, 189563 clauses
SAT checker: instance is UNSATISFIABLE
Runtime decision procedure: 12.619s

** Results:
[] must hold lock upon unlock: SUCCESS
[pthread_mutex_unlock.assertion.1] must hold lock upon unlock: SUCCESS
[pthread_mutex_unlock.assertion.2] must hold lock upon unlock: SUCCESS
[main.assertion.1] assertion 0: SUCCESS
[pthread_mutex_unlock.assertion.3] must hold lock upon unlock: SUCCESS
[pthread_mutex_unlock.assertion.4] must hold lock upon unlock: SUCCESS
[pthread_mutex_unlock.assertion.5] must hold lock upon unlock: SUCCESS
[pthread_mutex_unlock.assertion.6] must hold lock upon unlock: SUCCESS
[pthread_mutex_unlock.assertion.7] must hold lock upon unlock: SUCCESS
[pthread_mutex_unlock.assertion.8] must hold lock upon unlock: SUCCESS
[pthread_mutex_unlock.assertion.9] must hold lock upon unlock: SUCCESS
[pthread_mutex_unlock.assertion.10] must hold lock upon unlock: SUCCESS
[pthread_mutex_unlock.assertion.11] must hold lock upon unlock: SUCCESS

** 0 of 13 failed (1 iteration)
VERIFICATION SUCCESSFUL
