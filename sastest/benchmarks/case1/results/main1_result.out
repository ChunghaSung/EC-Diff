CBMC version 5.8 64-bit x86_64 linux
Parsing benchmarks/case1/main1.c
Converting
Type-checking main1
Generating GOTO Program
Adding CPROVER library (x86_64)
Removal of function pointers and virtual functions
file <builtin-library-pthread_create> line 46 function pthread_create: replacing function pointer by 2 possible targets
Partial Inlining
Generic Property Instrumentation
Starting Bounded Model Checking
Adding SC constraints
Shared __CPROVER_threads_exited: 2R/3W
Shared __CPROVER_next_thread_id: 1R/3W
Shared a: 4R/5W
Shared b: 4R/5W
Shared sas0: 8R/9W
Shared rf_read: 3R/3W
Shared rf_write1: 3R/3W
Shared rf_write2: 1R/3W
Shared rf_write3: 1R/3W
Shared rf_check: 1R/3W
Shared x_SHARED: 3R/4W
Shared y_SHARED: 2R/3W
size of program expression: 1528 steps
no slicing due to threads
Generated 9 VCC(s), 9 remaining after simplification
Passing problem to propositional reduction
converting SSA
Running propositional reduction
Post-processing
Solving with MiniSAT 2.2.1 with simplifier
39763 variables, 154494 clauses
SAT checker: instance is UNSATISFIABLE
Runtime decision procedure: 5.727s

** Results:
[] must hold lock upon unlock: SUCCESS
[main.assertion.1] assertion !(rf_check != FALSE): SUCCESS
[pthread_mutex_unlock.assertion.1] must hold lock upon unlock: SUCCESS
[pthread_mutex_unlock.assertion.2] must hold lock upon unlock: SUCCESS
[pthread_mutex_unlock.assertion.3] must hold lock upon unlock: SUCCESS
[pthread_mutex_unlock.assertion.4] must hold lock upon unlock: SUCCESS
[pthread_mutex_unlock.assertion.5] must hold lock upon unlock: SUCCESS
[pthread_mutex_unlock.assertion.6] must hold lock upon unlock: SUCCESS
[pthread_mutex_unlock.assertion.7] must hold lock upon unlock: SUCCESS
[pthread_mutex_unlock.assertion.8] must hold lock upon unlock: SUCCESS

** 0 of 10 failed (1 iteration)
VERIFICATION SUCCESSFUL
